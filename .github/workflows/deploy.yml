# .github/workflows/deploy.yml (Updated for OIDC and ESC)

name: Deploy Pulumi Stack (OIDC + ESC) 

on:
  push:
    branches:
      - main # Trigger on pushes to main
  workflow_dispatch: # Allow manual triggering

# Add permissions needed for OIDC token fetch and code checkout
permissions:
  id-token: write # Required to fetch the OIDC token
  contents: read  # Required to checkout the repository code

jobs:
  update:
    name: Update Pulumi Stack via OIDC # Updated job name
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Step 3: Configure AWS Credentials using OIDC Role Assumption
      # This step exchanges GitHub's OIDC token for temporary AWS credentials
      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
     
          role-to-assume: arn:aws:iam::061051244402:role/GitHubActions-Pulumi-Lab-Role
          aws-region: us-east-1 # Must match the region expected by your resources/ESC config

      # Step 4: Install dependencies
      - name: Install Dependencies
        run: npm ci
        working-directory: ./ppinfra # Your Pulumi code folder name

      # Step 5: Run Pulumi Up, authenticating via OIDC creds from Step 3
      # and getting config from the ESC environment specified below
      - name: Run Pulumi Up with ESC
        uses: pulumi/actions@v5
        with:
          command: up
          stack-name: Indumathi1/myworkshop/dev # Your Pulumi User/Project/Stack name
          work-dir: ./ppinfra # Your Pulumi code folder name
          # Specify the ESC environment to load config (like region) from
          pulumi-environment: Indumathi1/lab8-config # NOTE: Using lab8-config as created
        env:
          # Pulumi token is still needed for Pulumi Cloud access
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          # NO AWS secrets needed here anymore!