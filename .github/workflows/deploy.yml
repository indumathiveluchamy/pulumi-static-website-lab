# .github/workflows/deploy.yml

name: Deploy Pulumi Stack (Secrets) # Workflow name displayed on GitHub

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  workflow_dispatch: # Allow manual triggering from GitHub Actions tab

jobs:
  update: # Job ID
    name: Update Pulumi Stack # Job name displayed on GitHub
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    steps:
      # Step 1: Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment (version 18)
      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Step 3: Install Node.js dependencies using npm ci
      # Ensures a clean, reproducible install based on package-lock.json
      - name: Install Dependencies
        run: npm ci
        working-directory: ./ppinfra # IMPORTANT: Your Pulumi code folder name

      # Step 4: Configure AWS Credentials using GitHub Secrets
      # This action makes the secrets available as environment variables for subsequent steps
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # IMPORTANT: Ensure this matches the region you configured

      # Step 5: Run 'pulumi up' using the Pulumi GitHub Action
      - name: Run Pulumi Up
        uses: pulumi/actions@v5
        with:
          command: up # The Pulumi command to run (deploy/update)
          stack-name: Indumathi1/myworkshop/dev # IMPORTANT: Your Pulumi User/Project/Stack name
          work-dir: ./ppinfra # IMPORTANT: Your Pulumi code folder name
        env:
          # Pass the Pulumi access token to the action
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          # AWS credentials are automatically picked up by Pulumi from the environment
          # set by the 'configure-aws-credentials' action above.